name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      new_version_string:
        description: 'New version string (eg, 0.4.4, 0.4.4-rc1)'
        required: true
        type: string

jobs:
  prepare_version:
    runs-on: ubuntu-latest
    outputs:
      new_version_tag: v${{ github.event.inputs.new_version_string }}
      new_version_number: ${{ github.event.inputs.new_version_string }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install tools
        run: |
          cargo install cargo-edit
          cargo install toml-cli

      - name: update crate versions& inter-dependency
        env:
          TARGET_VERSION: ${{ github.event.inputs.new_version_string }}
        run: |
          echo "Target Version: $TARGET_VERSION"
          
          echo "Setting av1an-core version to $TARGET_VERSION"
          (cd av1an-core && cargo set-version "$TARGET_VERSION")
          
          echo "Setting av1an version to $TARGET_VERSION"
          (cd av1an && cargo set-version "$TARGET_VERSION")

          echo "Verify av1an-core dependency version in av1an/Cargo.toml"
          DEP_VER=$(toml get av1an/Cargo.toml dependencies.av1an-core.version | tr -d '\"')
          
          echo "expected dep ver: $TARGET_VERSION. found: $DEP_VER"
          
          if [ "$DEP_VER" != "$TARGET_VERSION" ]; then
            echo "cargo-edit didnt update av1an-core dep in av1an/Cargo.toml to $TARGET_VERSION."
            echo "explicit update with toml set"
            toml set av1an/Cargo.toml dependencies.av1an-core.version "$TARGET_VERSION"
            
            DEP_VER_AFTER_SET=$(toml get av1an/Cargo.toml dependencies.av1an-core.version | tr -d '\"')
            if [ "$DEP_VER_AFTER_SET" != "$TARGET_VERSION" ]; then
                echo "'toml set' failed to update dep to $TARGET_VERSION. Found $DEP_VER_AFTER_SET."
                exit 1
            else
                echo "explicit 'toml set' successful. Path dependency updated."
            fi
          else
            echo "av1an-core dependency version in av1an/Cargo.toml correctly set to $TARGET_VERSION."
          fi

      - name: Update Cargo.lock
        run: |
          cargo metadata --manifest-path Cargo.toml --format-version 1

      - name: Commit/Tag/Push
        uses: EndBug/add-and-commit@v9.1.4
        with:
          default_author: github_actions
          message: 'chore(release): prepare release v${{ github.event.inputs.new_version_string }}'
          tag: 'v${{ github.event.inputs.new_version_string }}'
          add: 'av1an/Cargo.toml av1an-core/Cargo.toml Cargo.lock'
          push: true